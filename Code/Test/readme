SimpleCommunication contains two programs.

BOARD SIDE: it waits for an interrupt from rs232 (that is a packet from the pc), decodes the packet and perform the operation.
PC SIDE: setup tty and send a message to the board when you press enter.

I DID NOT USE THE TERMINAL FROM RESOURCES!

**************************************************************************************************************************************************

Core contains the pillars for the whole project.

*packet.h: some definitions and struct of the packet
*command.h: prototypes for the commands received from the pc
*command.c: implementation of decoding
*drone.h: contains the info about the drone
*main.c: main process

Basic Flow:
1) setup (interrupts, variables, ...)
2) Loop till receive EXIT command
3) default SAFE_MODE and it loops inside SAFE_MODE untill it receives an interrupt (a packet from pc)
4) packet (SET_MODE,MANUAL_MODE) received and decoded. Now the struct drone is in MANUAL MODE
5) in main the switch now enters MANUAL_MODE, which loops untill a SET_MODE arrives from pc
6) in MANUAL_MODE loop you can read data from the struct drone and write them into peripherals (actuation)
7) packet (SET_LIFT,100) received and decoded. Now in the struct drone the field lift = 100
8) in MANUAL_MODE loop you will read lift = 100 and set accordingly the peripherals.
